name: "Build vs-flake shell"
on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  build-shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - run: sudo rm -rf /opt /usr/local /usr/share
      - id: cache-tensorrt-sdk
        uses: actions/cache/restore@v3
        with:
          path: /tmp/TensorRT-8.5.3.1.Linux.x86_64-gnu.cuda-11.8.cudnn8.6.tar.gz
          key: ${{ runner.os }}-tensorrt-sdk
      - if: steps.cache-tensorrt-sdk.outputs.cache-hit != 'true'
        run: |
          curl -O --output-dir /tmp -L \
            'https://developer.nvidia.com/downloads/compute/machine-learning/tensorrt/secure/8.5.3/tars/TensorRT-8.5.3.1.Linux.x86_64-gnu.cuda-11.8.cudnn8.6.tar.gz' \
            -H 'cookie: remember_user_token=${{ secrets.NVIDIA_USER_TOKEN }}'
      - if: steps.cache-tensorrt-sdk.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: /tmp/TensorRT-8.5.3.1.Linux.x86_64-gnu.cuda-11.8.cudnn8.6.tar.gz
          key: ${{ steps.cache-tensorrt-sdk.outputs.cache-primary-key }}
      - run: |
          nix-store --add-fixed sha256 /tmp/TensorRT-8.5.3.1.Linux.x86_64-gnu.cuda-11.8.cudnn8.6.tar.gz
          rm /tmp/TensorRT-8.5.3.1.Linux.x86_64-gnu.cuda-11.8.cudnn8.6.tar.gz
      - uses: cachix/cachix-action@v12
        with:
          name: vs-flake
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop --accept-flake-config --command true
